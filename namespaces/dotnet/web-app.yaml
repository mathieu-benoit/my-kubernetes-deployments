apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1000
      containers:
        - name: web
          securityContext:
            capabilities:
              drop:
                - all
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          image: us-east4-docker.pkg.dev/mygke-756/containers/web-app:a33bed1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: API_URL
              value: "http://api:5001"
          resources:
            requests:
              cpu: 60m
              memory: 47Mi
            limits:
              cpu: 120m
              memory: 160Mi
          readinessProbe:
            initialDelaySeconds: 15
            httpGet:
              port: 8080
              path: /ready
          livenessProbe:
            initialDelaySeconds: 15
            tcpSocket:
              port: 8080
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: web
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  labels:
    app: web
spec:
  type: ClusterIP
  ports:
  - port: 8080
    name: http
  selector:
    app: web
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  labels:
    app: web
  name: web
spec:
  backend:
    serviceName: web
    servicePort: 8080
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: web
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: web
  updatePolicy:
    updateMode: "Off"