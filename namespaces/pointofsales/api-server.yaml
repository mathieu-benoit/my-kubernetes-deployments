apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
spec:
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      serviceAccountName: api-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 5
      containers:
      - name: api-server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: us-east4-docker.pkg.dev/mygke-200/containers/pointofsales/api-server:fbc63fd
        env:
        - name: INVENTORY_EP
          valueFrom:
            configMapKeyRef:
              name: service-configs
              key: INVENTORY_EP
        - name: PAYMENTS_EP
          valueFrom:
            configMapKeyRef:
              name: service-configs
              key: PAYMENTS_EP
        ports:
          - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: v1
kind: Service
metadata:
  name: api-server
spec:
  type: ClusterIP
  selector:
    app: api-server
  ports:
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: api-server
spec:
  hosts:
    - pos.alwaysupalwayson.com
  gateways:
  - asm-ingress/asm-ingressgateway
  http:
  - route:
    - destination:
        host: api-server
        port:
          number: 8080
---
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: api-server
spec:
  workloadSelector:
    labels:
      app: api-server
  egress:
  - hosts:
    - "istio-system/*"
    - "./inventory.pointofsales.svc.cluster.local"
    - "./payments.pointofsales.svc.cluster.local"
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-server
spec:
  selector:
    matchLabels:
      app: api-server
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/asm-ingress/sa/asm-ingressgateway"]
    to:
      - operation:
          methods: ["GET"]
          ports: ["8080"]